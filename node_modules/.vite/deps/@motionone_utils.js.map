{
  "version": 3,
  "sources": ["../../@motionone/utils/dist/array.es.js", "../../@motionone/utils/dist/clamp.es.js", "../../@motionone/utils/dist/defaults.es.js", "../../@motionone/utils/dist/is-number.es.js", "../../@motionone/utils/dist/is-easing-list.es.js", "../../@motionone/utils/dist/wrap.es.js", "../../@motionone/utils/dist/easing.es.js", "../../@motionone/utils/dist/mix.es.js", "../../@motionone/utils/dist/noop.es.js", "../../@motionone/utils/dist/progress.es.js", "../../@motionone/utils/dist/offset.es.js", "../../@motionone/utils/dist/interpolate.es.js", "../../@motionone/utils/dist/is-cubic-bezier.es.js", "../../@motionone/utils/dist/is-easing-generator.es.js", "../../@motionone/utils/dist/is-function.es.js", "../../@motionone/utils/dist/is-string.es.js", "../../@motionone/utils/dist/time.es.js", "../../@motionone/utils/dist/velocity.es.js"],
  "sourcesContent": ["function addUniqueItem(array, item) {\r\n    array.indexOf(item) === -1 && array.push(item);\r\n}\r\nfunction removeItem(arr, item) {\r\n    const index = arr.indexOf(item);\r\n    index > -1 && arr.splice(index, 1);\r\n}\r\n\r\nexport { addUniqueItem, removeItem };\r\n", "const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\r\n\r\nexport { clamp };\r\n", "const defaults = {\r\n    duration: 0.3,\r\n    delay: 0,\r\n    endDelay: 0,\r\n    repeat: 0,\r\n    easing: \"ease\",\r\n};\r\n\r\nexport { defaults };\r\n", "const isNumber = (value) => typeof value === \"number\";\r\n\r\nexport { isNumber };\r\n", "import { isNumber } from './is-number.es.js';\r\n\r\nconst isEasingList = (easing) => Array.isArray(easing) && !isNumber(easing[0]);\r\n\r\nexport { isEasingList };\r\n", "const wrap = (min, max, v) => {\r\n    const rangeSize = max - min;\r\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\r\n};\r\n\r\nexport { wrap };\r\n", "import { isEasingList } from './is-easing-list.es.js';\r\nimport { wrap } from './wrap.es.js';\r\n\r\nfunction getEasingForSegment(easing, i) {\r\n    return isEasingList(easing)\r\n        ? easing[wrap(0, easing.length, i)]\r\n        : easing;\r\n}\r\n\r\nexport { getEasingForSegment };\r\n", "const mix = (min, max, progress) => -progress * min + progress * max + min;\r\n\r\nexport { mix };\r\n", "const noop = () => { };\r\nconst noopReturn = (v) => v;\r\n\r\nexport { noop, noopReturn };\r\n", "const progress = (min, max, value) => max - min === 0 ? 1 : (value - min) / (max - min);\r\n\r\nexport { progress };\r\n", "import { mix } from './mix.es.js';\r\nimport { progress } from './progress.es.js';\r\n\r\nfunction fillOffset(offset, remaining) {\r\n    const min = offset[offset.length - 1];\r\n    for (let i = 1; i <= remaining; i++) {\r\n        const offsetProgress = progress(0, remaining, i);\r\n        offset.push(mix(min, 1, offsetProgress));\r\n    }\r\n}\r\nfunction defaultOffset(length) {\r\n    const offset = [0];\r\n    fillOffset(offset, length - 1);\r\n    return offset;\r\n}\r\n\r\nexport { defaultOffset, fillOffset };\r\n", "import { mix } from './mix.es.js';\r\nimport { noopReturn } from './noop.es.js';\r\nimport { fillOffset, defaultOffset } from './offset.es.js';\r\nimport { progress } from './progress.es.js';\r\nimport { getEasingForSegment } from './easing.es.js';\r\nimport { clamp } from './clamp.es.js';\r\n\r\nfunction interpolate(output, input = defaultOffset(output.length), easing = noopReturn) {\r\n    const length = output.length;\r\n    /**\r\n     * If the input length is lower than the output we\r\n     * fill the input to match. This currently assumes the input\r\n     * is an animation progress value so is a good candidate for\r\n     * moving outside the function.\r\n     */\r\n    const remainder = length - input.length;\r\n    remainder > 0 && fillOffset(input, remainder);\r\n    return (t) => {\r\n        let i = 0;\r\n        for (; i < length - 2; i++) {\r\n            if (t < input[i + 1])\r\n                break;\r\n        }\r\n        let progressInRange = clamp(0, 1, progress(input[i], input[i + 1], t));\r\n        const segmentEasing = getEasingForSegment(easing, i);\r\n        progressInRange = segmentEasing(progressInRange);\r\n        return mix(output[i], output[i + 1], progressInRange);\r\n    };\r\n}\r\n\r\nexport { interpolate };\r\n", "import { isNumber } from './is-number.es.js';\r\n\r\nconst isCubicBezier = (easing) => Array.isArray(easing) && isNumber(easing[0]);\r\n\r\nexport { isCubicBezier };\r\n", "const isEasingGenerator = (easing) => typeof easing === \"object\" &&\r\n    Boolean(easing.createAnimation);\r\n\r\nexport { isEasingGenerator };\r\n", "const isFunction = (value) => typeof value === \"function\";\r\n\r\nexport { isFunction };\r\n", "const isString = (value) => typeof value === \"string\";\r\n\r\nexport { isString };\r\n", "const time = {\r\n    ms: (seconds) => seconds * 1000,\r\n    s: (milliseconds) => milliseconds / 1000,\r\n};\r\n\r\nexport { time };\r\n", "/*\r\n  Convert velocity into velocity per second\r\n\r\n  @param [number]: Unit per frame\r\n  @param [number]: Frame duration in ms\r\n*/\r\nfunction velocityPerSecond(velocity, frameDuration) {\r\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\r\n}\r\n\r\nexport { velocityPerSecond };\r\n"],
  "mappings": ";;;AAAA,SAAS,cAAc,OAAO,MAAM;AAChC,QAAM,QAAQ,IAAI,MAAM,MAAM,MAAM,KAAK,IAAI;AACjD;AACA,SAAS,WAAW,KAAK,MAAM;AAC3B,QAAM,QAAQ,IAAI,QAAQ,IAAI;AAC9B,UAAQ,MAAM,IAAI,OAAO,OAAO,CAAC;AACrC;;;ACNA,IAAM,QAAQ,CAAC,KAAK,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG;;;ACA7D,IAAM,WAAW;AAAA,EACb,UAAU;AAAA,EACV,OAAO;AAAA,EACP,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AACZ;;;ACNA,IAAM,WAAW,CAAC,UAAU,OAAO,UAAU;;;ACE7C,IAAM,eAAe,CAAC,WAAW,MAAM,QAAQ,MAAM,KAAK,CAAC,SAAS,OAAO,CAAC,CAAC;;;ACF7E,IAAM,OAAO,CAAC,KAAK,KAAK,MAAM;AAC1B,QAAM,YAAY,MAAM;AACxB,WAAW,IAAI,OAAO,YAAa,aAAa,YAAa;AACjE;;;ACAA,SAAS,oBAAoB,QAAQ,GAAG;AACpC,SAAO,aAAa,MAAM,IACpB,OAAO,KAAK,GAAG,OAAO,QAAQ,CAAC,CAAC,IAChC;AACV;;;ACPA,IAAM,MAAM,CAAC,KAAK,KAAKA,cAAa,CAACA,YAAW,MAAMA,YAAW,MAAM;;;ACAvE,IAAM,OAAO,MAAM;AAAE;AACrB,IAAM,aAAa,CAAC,MAAM;;;ACD1B,IAAM,WAAW,CAAC,KAAK,KAAK,UAAU,MAAM,QAAQ,IAAI,KAAK,QAAQ,QAAQ,MAAM;;;ACGnF,SAAS,WAAW,QAAQ,WAAW;AACnC,QAAM,MAAM,OAAO,OAAO,SAAS,CAAC;AACpC,WAAS,IAAI,GAAG,KAAK,WAAW,KAAK;AACjC,UAAM,iBAAiB,SAAS,GAAG,WAAW,CAAC;AAC/C,WAAO,KAAK,IAAI,KAAK,GAAG,cAAc,CAAC;AAAA,EAC3C;AACJ;AACA,SAAS,cAAc,QAAQ;AAC3B,QAAM,SAAS,CAAC,CAAC;AACjB,aAAW,QAAQ,SAAS,CAAC;AAC7B,SAAO;AACX;;;ACPA,SAAS,YAAY,QAAQ,QAAQ,cAAc,OAAO,MAAM,GAAG,SAAS,YAAY;AACpF,QAAM,SAAS,OAAO;AAOtB,QAAM,YAAY,SAAS,MAAM;AACjC,cAAY,KAAK,WAAW,OAAO,SAAS;AAC5C,SAAO,CAAC,MAAM;AACV,QAAI,IAAI;AACR,WAAO,IAAI,SAAS,GAAG,KAAK;AACxB,UAAI,IAAI,MAAM,IAAI,CAAC;AACf;AAAA,IACR;AACA,QAAI,kBAAkB,MAAM,GAAG,GAAG,SAAS,MAAM,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;AACrE,UAAM,gBAAgB,oBAAoB,QAAQ,CAAC;AACnD,sBAAkB,cAAc,eAAe;AAC/C,WAAO,IAAI,OAAO,CAAC,GAAG,OAAO,IAAI,CAAC,GAAG,eAAe;AAAA,EACxD;AACJ;;;AC1BA,IAAM,gBAAgB,CAAC,WAAW,MAAM,QAAQ,MAAM,KAAK,SAAS,OAAO,CAAC,CAAC;;;ACF7E,IAAM,oBAAoB,CAAC,WAAW,OAAO,WAAW,YACpD,QAAQ,OAAO,eAAe;;;ACDlC,IAAM,aAAa,CAAC,UAAU,OAAO,UAAU;;;ACA/C,IAAM,WAAW,CAAC,UAAU,OAAO,UAAU;;;ACA7C,IAAM,OAAO;AAAA,EACT,IAAI,CAAC,YAAY,UAAU;AAAA,EAC3B,GAAG,CAAC,iBAAiB,eAAe;AACxC;;;ACGA,SAAS,kBAAkB,UAAU,eAAe;AAChD,SAAO,gBAAgB,YAAY,MAAO,iBAAiB;AAC/D;",
  "names": ["progress"]
}
